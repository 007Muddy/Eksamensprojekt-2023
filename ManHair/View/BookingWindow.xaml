<Window x:Class="ManHair.View.BookingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ManHair.View"
        mc:Ignorable="d"
        Title="Booking" Height="450" Width="800" WindowStyle="None"
        MouseDown="Window_MouseDown">

    <Grid Height="450" VerticalAlignment="Bottom">

        <Grid.Background>
            <ImageBrush ImageSource="/View/Images/hair.jpg"/>
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <ListView Name="Type" ItemsSource="{Binding TreatmentVM}" SelectedItem="{Binding SelectedTreatmentVM}" SelectionMode="Multiple" Margin="60,39,190,152" SelectionChanged="ListView_SelectionChanged">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Type" DisplayMemberBinding="{Binding Type}"/>
                    <GridViewColumn Header="Price" DisplayMemberBinding="{Binding Price, StringFormat='{}{0} kr'}"/>
                </GridView>
            </ListView.View>
        </ListView>

        <Label Name="labelTotalPrice" Content="Total Pris: 0,00 kr&#xD;&#xA;"  HorizontalAlignment="Left" Margin="60,255,0,0" VerticalAlignment="Top" Height="27" Width="117"/>
        <Calendar Name="AvailableDates" SelectedDate="{Binding SelectedDateOnly}" SelectedDatesChanged="AvailableDates_SelectedDatesChanged"  HorizontalAlignment="Left" Margin="338,125,0,0" VerticalAlignment="Top" SelectionMode="SingleDate"  IsTodayHighlighted="false" Grid.ColumnSpan="2">
            <Calendar.BlackoutDates>

            </Calendar.BlackoutDates>
        </Calendar>
        <ListView x:Name="AvailableTimeSlots" ItemsSource="{Binding AvailabilityVM}" SelectedItem="{Binding SelectedTime}" SelectionMode="Single" Margin="40,39,10,152" SelectionChanged="ListView_AvailableTime" Grid.Column="1">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Ledige Tider" DisplayMemberBinding="{Binding Time, StringFormat={}{0:HH:mm}}"/>
                </GridView>
            </ListView.View>
        </ListView>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,5,0" Grid.Column="1">
            <Button x:Name="MinimizeButton" Content="_" Height="24" Width="30" FontSize="16" Foreground="White" BorderBrush="Transparent" Click="MinimizeButton_Click" Background="#FFF6A900">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black"/>
                                    <GradientStop Color="#FFC57615" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5"/>
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="CloseButton" Content="X" Height="24" Width="30" Click="CloseButton_Click" Background="Red">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black"/>
                                    <GradientStop Color="#FFE02323" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5"/>
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>

        <Button x:Name="Fortryd" Content="Fortryd" HorizontalAlignment="Left" Margin="300,376,0,0" VerticalAlignment="Top" Click="Cancel_Click" Height="48" Width="76" Background="White">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="20" Padding="5" Margin="5">
                        <Grid>
                            <Rectangle Fill="#C8C8C8" RadiusX="10" RadiusY="10" Opacity="0.6" Margin="2,2,0,0"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#008CBA" Offset="0"/>
                                        <GradientStop Color="#004E98" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#004E98"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button x:Name="Bestil" Content="Bestil" HorizontalAlignment="Left" Margin="478,376,0,0" VerticalAlignment="Top" Click="Order_Click" Height="48" Width="76" Background="White" Grid.ColumnSpan="2">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="20" Padding="5" Margin="5">
                        <Grid>
                            <Rectangle Fill="#C8C8C8" RadiusX="10" RadiusY="10" Opacity="0.6" Margin="2,2,0,0"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#008CBA" Offset="0"/>
                                        <GradientStop Color="#004E98" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#004E98"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
    </Grid>
</Window>


